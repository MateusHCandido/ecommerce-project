name: CI INVENTORY-SERVICE

on:
  push:
    branches: [ "inventory-service" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven

    - name: Start Docker Compose Services
      run: docker compose up -d

    - name: Wait for Services to be Healthy
      run: |
        # Espera até que o MySQL, Kafka e outros serviços estejam prontos
        docker compose exec -T mysql sh -c 'until mysqladmin ping -hmysql -uroot -prootpassword --silent; do sleep 2; done'
        docker compose exec -T kafka sh -c 'until nc -z kafka 9092; do sleep 2; done'

    - name: Build Application Inventory-Service JAR
      working-directory: ./inventory-service
      run: mvn clean package

    - name: Build Application Product-Service JAR
      working-directory: ./product-service
      run: mvn clean package

    - name: Docker Compose Build
      run: docker compose build

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/ecommerce-inventory-service:latest ${{ secrets.DOCKER_USERNAME }}/ecommerce-inventory-service:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-inventory-service:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-inventory-service:latest
